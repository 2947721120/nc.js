'use strict'

const util = require('util');
const views = require('views');
const path = require('path');
const fs = require('fs');
const View = views.View;
const ListView = views.ListView;

function PathView(parent) {
    View.call(this, parent, 'pre', 'fe_path');
}
util.inherits(PathView, View);

function FileView(parent) {
    ListView.call(this, parent);
}
util.inherits(FileView, ListView);

function FileExplorer(parent, root) {
    this.viewPath = new PathView(parent);
    this.viewFile = new FileView(parent);

    this.viewFile.on('selectItem', (item) => {
        this.selectItem(item);
    });

    this.cwd = root;
    this.cd(root);
};

FileExplorer.prototype.cd = function(dir) {
    this.cwd = path.resolve(this.cwd, dir);
    this.viewPath.setHTML('CWD: ' + this.cwd);
    this.viewFile.clearItems();

    if (path.resolve(this.cwd, '..') != this.cwd) {
        var item = this.viewFile.addItem('..');
        item.filename = '..';
    }

    var files = fs.readdirSync(this.cwd);

    files.forEach((f) => {
        var item = this.viewFile.addItem(f);
        item.filename = f;
    });
}

FileExplorer.prototype.selectItem = function(item) {
    var filepath = path.resolve(this.cwd, item.filename);
    var isFile = false;
    try {
        isFile = fs.statSync(filepath).isFile();
    } catch (e) {
        // handle it as a folder
    }

    if (isFile)
        window.open(filepath);
    else
        this.cd(item.filename);
}

exports.FileExplorer = FileExplorer;